=== INFORMATION GATHERING 2 ===
Hierarquia de Rede
1º Rede
|----->	2º Hosts
	|---->	3º Serviços
		|----->	4º Aplicações

== Port Scanner ==
Programa capaz de analisar endereços a procura d eportas abertas e serviços rodando
Faz isso mudando requisições e esperando respostas especificas


Port Scanner e Sweep
	Scanner é usado na maioria para enumerar serviços e portas abertas em um ou mais hosts

	Sweep é parecido mas busca encontrar diversos hosts com um determinado serviço rodando



TCP Scanning
	Conecta via tcp(ou tenta) espera o 3-way-handshake
	Se a conexão na porta X funciona significa que a porta ta aberta
	Usa função Connect do SO e não precisa de privilegios
	É um metodo barulhento e pode gerar log com ip do atacante


SYN Scanning
	Tembém TCP mas não usa a função pronta do sistema, mas forja seus prorios pacotes de SYN
	Quando o alvo responde SYN ACK, a conexão enviando RST, não completando o 3WH
	Precisa de privilegios para forjar pacotes
	Não gera barulho e pode ser inloggavel
	MAs se torna menos preciso por não confirmar a conexão

UDP Scanning
	Lento e não confiavel
	Não emite respostas
	quando a porta esta fechada é recebido um ICMP
	Por este motivo quando não se recebe resposta diz que a porta esta aberta
	Alguns firewalls bloquiam o ICMP gerando falso positivo
	/pode-se enviar pacotes especificos pra cada serviço

FIN Scanning
	Uso em grande escala portanto a maioria dos firewall ja bloqueia pacotes SYN
	Por isso o FIN pode By-Passar o mesmo
	Quando a respota é RTS a porta esta fechada
	Quando a conexão é ignorada, significa que a porta esta aberta

ICMP Scanning
	Usado para reconhecimento de Hosts ativos com PING ou ECHO
		(Manda ping e recebe pong :D )
	Não é feito a descoberta de portas
	Extremamente rapido mas pode ser impreciso
	Alguns firewall bloquiam o ICMP


== Captura de banners e scanning com netcat ==

<> nc <host> <port>
Banner porta 80	{
	HTTP/1.1 400 Bad Request
	Date: Thu, 14 Oct 2021 18:14:22 GMT
	Server: Apache/2.4.49 (Debian)
	Content-Length: 301
	Connection: close
	Content-Type: text/html; charset=iso-8859-1
}


Analisando o banner podemos definir se a porta esta aberta 
E muitas vezes obter algumas informações sobre a aplicação que esta rodando



<> nc -zv 127.0.0.0 1-100
	-z = Apenas Scanning
	-v = Para mostrar informações
{
	localhost [127.0.0.1] 80 (http) open
}


Faz um scanning das portas selecionadas


== RECONHECIMENTO DE REDES COM NMAP ==
Network Mapping - nmap

<> nmap 127.0.0.1
Ele por padrão escaneio as 1000 portas mais usadas

<> nmap 127.0.0.1 -p 1-3000,3306
	-p = Define uma unica ou um range de portas

<> nmap 172.16.2.0/24 -sL
	/24 = indica todos os 255 endereços
	-sL = Apenas mostra os ips que seriam escaneados

--> 192.168.1.0/24 
--> 192.168.0.0/16 
--> 192.0.0.0/8 
--> 0.0.0.0/0

<> nmap -iL wordlist.txt
	-iL = Indica que sera usado uma wordlist para saber os hosts a serem escaneados

<> nmap -sV 127.0.0.1
	-sV = Scaneia a versão da aplicação de cada porta


<> nmap -O 127.0.0.1
	-O = Tenta resolver o sistema operacianal em execução

<> nmap 127.0.0.1 -sS
	-sS = Indica a conexão FIN ACK

<> nmap -sU 127.0.0.1 -p-
	-sU = Portas UDP
	-p- = Escaneia TODAS as portas possiveis

<> nmap -A 127.0.0.1
	-A = SO, Version, Tracerout and Scripting

<> nmap 127.0.0.1 -sS -p 1-5000 -oN output.txt
	-oN = Indica para salvar os resultados obtidos em um arquivo

<> nmap 127.0.0.1 --script vuln
	--script = Executa a engine de scripts
		   logo deve-se passar o script desejado
	vuln = Script que busca vulnerabilidades

<> nmap -sn -Pn
	-sn = Apenas Ping
	-Pn = Pula o teste Ping


https://nmap.org/man/pt_BR/



PARAMOS NA AULA 5


